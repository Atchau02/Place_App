{"version":3,"file":"static/js/288.f0fbf3c0.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hooks.js","shared/util/validators.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport \"./UpdatePlace.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { useHttpClient } from \"../../shared/hooks/http-hooks\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\n\nexport default function UpdatePlace(props) {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      history.push(\"/\" + auth.userId + \"/places\");\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default function Input(props) {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    props.onInput(props.id, inputState.value, inputState.isValid);\n  }, [id, onInput, value, isValid]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.row || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nfunction ModalOverlay(props) {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n}\n\nexport default function Modal(props) {\n  return (\n    <>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </>\n  );\n}\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function useForm(initialInputs, initialFormValidity) {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n}\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["UpdatePlace","props","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","loadedPlace","setLoadedPlace","useState","placeId","useParams","history","useHistory","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","place","err","fetchPlace","_jsx","className","children","LoadingSpinner","_jsxs","_Fragment","ErrorModal","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","row","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}