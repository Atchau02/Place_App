{"version":3,"file":"static/js/220.947f7df7.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hooks.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nexport default function ImageUpload(props) {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState();\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files || event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default function Input(props) {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    props.onInput(props.id, inputState.value, inputState.isValid);\n  }, [id, onInput, value, isValid]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.row || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nfunction ModalOverlay(props) {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n}\n\nexport default function Modal(props) {\n  return (\n    <>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </>\n  );\n}\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function useForm(initialInputs, initialFormValidity) {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n}\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hooks\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    console.log(formState.inputs);\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\n          \"POST\",\n          formData\n        );\n\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              id=\"image\"\n              center\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"names":["props","href","_jsx","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","ImageUpload","file","setFile","useState","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","pickImageHandler","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","element","placeholder","onBlur","rows","row","htmlFor","label","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","_Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","React","ErrorModal","Card","LoadingSpinner","asOverlay","console","log","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","user","switchModeHandler","prevMode"],"sourceRoot":""}