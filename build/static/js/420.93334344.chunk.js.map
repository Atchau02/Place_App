{"version":3,"file":"static/js/420.93334344.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hooks.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nimport \"./Map.css\";\n\nexport default function Map(props) {\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom,\n    });\n\n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);\n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\n\nimport \"./PlaceItem.css\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hooks\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nexport default function PlaceItem(props) {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        \"DELETE\",\n        null,\n        { Authorization: \"Bearer \" + auth.token }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass={\"place-item__modal-content\"}\n        footerClass={\"place-item__modal-actions\"}\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <>\n            <Button inverse onClick={cancelDeleteHandler}>\n              Cancel\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              Delete\n            </Button>\n          </>\n        }\n      >\n        <p>Do you want to proceed and delete this place?</p>\n      </Modal>\n      <li className=\"place-item\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Card className=\"place-item__content\">\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <>\n                <Button to={`/places/${props.id}`}>EDIT</Button>\n                <Button danger onClick={showDeleteWarningHandler}>\n                  DELETE\n                </Button>\n              </>\n            )}\n          </div>\n        </Card>\n      </li>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport PlaceItem from \"./PlaceItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport \"./PlaceList.css\";\n\nexport default function PlaceList(props) {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hooks\";\n\nexport default function UserPlaces(props) {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setLoadedPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />{\" \"}\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nfunction ModalOverlay(props) {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n}\n\nexport default function Modal(props) {\n  return (\n    <>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </>\n  );\n}\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n"],"names":["Map","props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","_jsx","ref","className","style","PlaceItem","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","_jsxs","_Fragment","children","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","async","id","Authorization","token","onDelete","err","LoadingSpinner","asOverlay","Card","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","PlaceList","items","length","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter","href","size","Link","exact","type","disabled","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}